apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-target-cluster
spec:
  kafka:
    # version: 2.7.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
    storage:
      type: ephemeral
    resources:
      requests:
        memory: 512Mi
        cpu: 200m
      limits:
        memory: 1024Mi
        cpu: 500m
    template:
      pod:
        tolerations:
        - key: "node-role.kubernetes.io"
          value: "master"
          operator: "Equal"
          effect: "NoSchedule"
        - key: ""
          operator: "Exists"
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
  zookeeper:
    replicas: 3
    storage:
      type: ephemeral
    resources:
      requests:
        memory: 512Mi
        cpu: 200m
      limits:
        memory: 1024Mi
        cpu: 500m
    template:
      pod:
        tolerations:
        - key: "node-role.kubernetes.io"
          value: "master"
          operator: "Equal"
          effect: "NoSchedule"
        - key: ""
          operator: "Exists"
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: zookeeper-metrics
          key: zookeeper-metrics-config.yml
  kafkaExporter:
    groupRegex: ".*"
    topicRegex: ".*" 
  cruiseControl:
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: cruise-control-metrics
          key: metrics-config.yml
  entityOperator:
    topicOperator: {}
      # resources:
      #   requests:
      #     memory: 128Mi
      #     cpu: 50m
      #   limits:
      #     memory: 200Mi
      #     cpu: 100m
    userOperator: {}
      # resources:
      #   requests:
      #     memory: 128Mi
      #     cpu: 50m
      #   limits:
      #     memory: 200Mi
      #     cpu: 100m
